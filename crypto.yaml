apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
        part-of: crypto
    spec:
      containers:
      - name: frontend
        image: jdvg19/front
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: login
spec:
  selector:
    app: login
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: login
spec:
  selector:
    matchLabels:
      app: login
  replicas: 1
  template:
    metadata:
      labels:
        app: login
        part-of: crypto
    spec:
      containers:
      - name: login
        image: jdvg19/login
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: mongos
spec:
  selector:
    app: mongos
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongos
spec:
  selector:
    matchLabels:
      app: mongos
  replicas: 1
  template:
    metadata:
      labels:
        app: mongos
        part-of: crypto
    spec:
      containers:
      - name: mongos
        image: jdvg19/mongo_service
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: portfolio
spec:
  selector:
    app: portfolio
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio
spec:
  selector:
    matchLabels:
      app: portfolio
  replicas: 1
  template:
    metadata:
      labels:
        app: portfolio
        part-of: crypto
    spec:
      containers:
      - name: portfolio
        image: jdvg19/portfolio
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: sqls
spec:
  selector:
    app: sqls
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqls
spec:
  selector:
    matchLabels:
      app: sqls
  replicas: 1
  template:
    metadata:
      labels:
        app: sqls
        part-of: crypto
    spec:
      containers:
      - name: sqls
        image: jdvg19/sql_service
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: timeseries
spec:
  selector:
    app: timeseries
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeseries
spec:
  selector:
    matchLabels:
      app: timeseries
  replicas: 1
  template:
    metadata:
      labels:
        app: timeseries
        part-of: crypto
    spec:
      containers:
      - name: timeseries
        image: jdvg19/time_series
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: wscrypto
spec:
  selector:
    app: wscrypto
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wscrypto
spec:
  selector:
    matchLabels:
      app: wscrypto
  replicas: 1
  template:
    metadata:
      labels:
        app: wscrypto
        part-of: crypto
    spec:
      containers:
      - name: wscrypto
        image: jdvg19/ws_crypto
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: wshist
spec:
  selector:
    app: wshist
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wshist
spec:
  selector:
    matchLabels:
      app: wshist
  replicas: 1
  template:
    metadata:
      labels:
        app: wshist
        part-of: crypto
    spec:
      containers:
      - name: wshist
        image: jdvg19/ws_hist
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: wsnews
spec:
  selector:
    app: wsnews
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wsnews
spec:
  selector:
    matchLabels:
      app: wsnews
  replicas: 1
  template:
    metadata:
      labels:
        app: wsnews
        part-of: crypto
    spec:
      containers:
      - name: wsnews
        image: jdvg19/ws_news
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: db_mongo
spec:
  selector:
    app: db_mongo
  ports:
  - protocol: TCP
    port: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db_mongo
spec:
  selector:
    matchLabels:
      app: db_mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: db_mongo
        part-of: ldanews
    spec:
      containers:
      - name: db_mongo
        image: mongo
        ports:
        - containerPort: 27017
---

apiVersion: v1
kind: Service
metadata:
  name: db_sql
spec:
  selector:
    app: db_sql
  ports:
  - protocol: TCP
    port: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db_sql
spec:
  selector:
    matchLabels:
      app: db_sql
  replicas: 1
  template:
    metadata:
      labels:
        app: db_sql
        part-of: ldanews
    spec:
      containers:
      - name: db_sql
        image: mysql:5.7
        ports:
        - containerPort: 3306
---



